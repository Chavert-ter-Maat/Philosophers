#include "../../include/philo.h"

void	go_eat(t_philo *philo)
{
	int32_t start_eat;

	pthread_mutex_lock(philo->print_msg);
	start_eat = get_time();
	printf(FORMAT, start_eat - philo->main->start_time, philo->id, "eating");
	pthread_mutex_unlock(philo->print_msg);
	// pthread_mutex_lock(&philo->chop_left);
	// pthread_mutex_lock(&philo->chop_right);
	// pthread_mutex_lock(&philo->eating);
	// philo->time_last_eat = start_eat;
	// pthread_mutex_unlock(&philo->eating);
	// philo->time_last_eat = start_eat;
	// pthread_mutex_unlock(&philo->chop_left);
	// pthread_mutex_unlock(&philo->chop_right);
	
	philo->status = SLEEP;
}

void	go_sleep(t_philo *philo)
{
	int32_t	start_sleep;
	
	start_sleep = get_time();
	pthread_mutex_lock(philo->print_msg);
	printf(FORMAT, start_sleep - philo->main->start_time, philo->id, "sleeping");
	pthread_mutex_unlock(philo->print_msg);
	philo->status = THINK;
}

void	go_think(t_philo *philo)
{
	int32_t start_think = get_time();
	
	printf(FORMAT, start_think - philo->main->start_time, philo->id, "thinking");
	philo->status = EAT;
}